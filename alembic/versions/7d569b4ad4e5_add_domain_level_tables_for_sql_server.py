"""add domain-level tables for SQL Server

Revision ID: 7d569b4ad4e5
Revises: 09bcd6505f73
Create Date: 2025-10-16 16:24:33.237609
"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '7d569b4ad4e5'
down_revision = '09bcd6505f73'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # admin.Officials created in baseline
    op.create_table('Roles',
    sa.Column('RoleID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('RoleName', sa.NVARCHAR(length=50), nullable=False),
    sa.Column('Description', sa.NVARCHAR(length=255), nullable=True),
    sa.PrimaryKeyConstraint('RoleID'),
    sa.UniqueConstraint('RoleName'),
    schema='auth'
    )
    # auth.Users created in baseline
    op.create_table('DataSources',
    sa.Column('SourceID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Name', sa.NVARCHAR(length=100), nullable=False),
    sa.Column('URL', sa.NVARCHAR(length=255), nullable=True),
    sa.Column('Type', sa.NVARCHAR(length=50), nullable=True),
    sa.Column('LastSync', sa.DateTime(), nullable=True),
    sa.Column('Status', sa.NVARCHAR(length=50), nullable=True),
    sa.PrimaryKeyConstraint('SourceID'),
    schema='budget'
    )
    op.create_table('Suppliers',
    sa.Column('SupplierID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('SupplierName', sa.NVARCHAR(length=255), nullable=False),
    sa.Column('TIN', sa.NVARCHAR(length=50), nullable=True),
    sa.Column('Country', sa.NVARCHAR(length=100), nullable=True),
    sa.PrimaryKeyConstraint('SupplierID'),
    schema='budget'
    )
    op.create_table('AwarenessTopics',
    sa.Column('TopicID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Title', sa.NVARCHAR(length=255), nullable=False),
    sa.Column('Category', sa.NVARCHAR(length=100), nullable=True),
    sa.Column('Description', sa.NVARCHAR(), nullable=True),
    sa.PrimaryKeyConstraint('TopicID'),
    schema='civic'
    )
    op.create_table('Provinces',
    sa.Column('ProvinceID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('RegionID', sa.Integer(), nullable=False),
    sa.Column('ProvinceName', sa.NVARCHAR(length=150), nullable=False),
    sa.Column('Code', sa.NVARCHAR(length=10), nullable=True),
    sa.ForeignKeyConstraint(['RegionID'], ['core.Regions.RegionID'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ProvinceID'),
    schema='core'
    )
    op.create_table('Cities',
    sa.Column('CityID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ProvinceID', sa.Integer(), nullable=False),
    sa.Column('CityName', sa.NVARCHAR(length=150), nullable=False),
    sa.Column('Population', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['ProvinceID'], ['core.Provinces.ProvinceID'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('CityID'),
    schema='core'
    )
    # core.Regions created in baseline
    op.create_table('LawIssues',
    sa.Column('IssueID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('IssueNumber', sa.NVARCHAR(length=50), nullable=False),
    sa.Column('PublicationDate', sa.Date(), nullable=False),
    sa.Column('SourceURL', sa.NVARCHAR(length=255), nullable=True),
    sa.Column('PDFFilePath', sa.NVARCHAR(length=255), nullable=True),
    sa.PrimaryKeyConstraint('IssueID'),
    schema='law'
    )
    op.create_table('ETLJobs',
    sa.Column('JobID', sa.NVARCHAR(length=50), nullable=False),
    sa.Column('SourceURL', sa.NVARCHAR(length=255), nullable=True),
    sa.Column('FilePath', sa.NVARCHAR(length=255), nullable=True),
    sa.Column('Status', sa.NVARCHAR(length=50), nullable=False),
    sa.Column('PagesParsed', sa.Integer(), nullable=False),
    sa.Column('Errors', sa.Integer(), nullable=False),
    sa.Column('CreatedAt', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('JobID'),
    schema='system'
    )
    op.create_table('ErrorLogs',
    sa.Column('ErrorID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Module', sa.NVARCHAR(length=100), nullable=False),
    sa.Column('Message', sa.NVARCHAR(), nullable=False),
    sa.Column('Severity', sa.NVARCHAR(length=50), nullable=True),
    sa.Column('Timestamp', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('ErrorID'),
    schema='system'
    )
    op.create_table('SystemParameters',
    sa.Column('ParamID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Key', sa.NVARCHAR(length=100), nullable=False),
    sa.Column('Value', sa.NVARCHAR(length=255), nullable=True),
    sa.Column('Description', sa.NVARCHAR(length=255), nullable=True),
    sa.PrimaryKeyConstraint('ParamID'),
    sa.UniqueConstraint('Key'),
    schema='system'
    )
    op.create_table('Institutions',
    sa.Column('InstitutionID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Code', sa.NVARCHAR(length=50), nullable=True),
    sa.Column('InstitutionName', sa.NVARCHAR(length=200), nullable=False),
    sa.Column('InstitutionType', sa.NVARCHAR(length=50), nullable=False),
    sa.Column('RegionID', sa.Integer(), nullable=True),
    sa.Column('ParentInstitutionID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['ParentInstitutionID'], ['admin.Institutions.InstitutionID'], ),
    sa.ForeignKeyConstraint(['RegionID'], ['core.Regions.RegionID'], ),
    sa.PrimaryKeyConstraint('InstitutionID'),
    schema='admin'
    )
    # ai.AIQueries created in baseline
    op.create_table('UserRoles',
    sa.Column('UserRoleID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('UserID', sa.Integer(), nullable=False),
    sa.Column('RoleID', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['RoleID'], ['auth.Roles.RoleID'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['UserID'], ['auth.Users.UserID'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('UserRoleID'),
    schema='auth'
    )
    op.create_table('AwarenessArticles',
    sa.Column('ArticleID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('TopicID', sa.Integer(), nullable=False),
    sa.Column('Title', sa.NVARCHAR(length=255), nullable=False),
    sa.Column('Content', sa.NVARCHAR(), nullable=False),
    sa.Column('DatePublished', sa.Date(), nullable=True),
    sa.Column('AuthorID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['AuthorID'], ['auth.Users.UserID'], ),
    sa.ForeignKeyConstraint(['TopicID'], ['civic.AwarenessTopics.TopicID'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ArticleID'),
    schema='civic'
    )
    op.create_table('Quizzes',
    sa.Column('QuizID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('TopicID', sa.Integer(), nullable=False),
    sa.Column('Title', sa.NVARCHAR(length=255), nullable=False),
    sa.Column('Description', sa.NVARCHAR(length=255), nullable=True),
    sa.ForeignKeyConstraint(['TopicID'], ['civic.AwarenessTopics.TopicID'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('QuizID'),
    schema='civic'
    )
    # civic.Reviews created in baseline
    # law.Laws created in baseline
    op.create_table('AuditLogs',
    sa.Column('LogID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('UserID', sa.Integer(), nullable=True),
    sa.Column('Action', sa.NVARCHAR(length=255), nullable=False),
    sa.Column('Entity', sa.NVARCHAR(length=100), nullable=False),
    sa.Column('EntityID', sa.Integer(), nullable=True),
    sa.Column('Timestamp', sa.DateTime(), nullable=False),
    sa.Column('Details', sa.NVARCHAR(), nullable=True),
    sa.ForeignKeyConstraint(['UserID'], ['auth.Users.UserID'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('LogID'),
    schema='system'
    )
    # system.Notifications created in baseline
    op.create_table('OfficialAssignments',
    sa.Column('AssignmentID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('OfficialID', sa.Integer(), nullable=False),
    sa.Column('InstitutionID', sa.Integer(), nullable=False),
    sa.Column('PositionTitle', sa.NVARCHAR(length=150), nullable=False),
    sa.Column('StartDate', sa.Date(), nullable=False),
    sa.Column('EndDate', sa.Date(), nullable=True),
    sa.Column('IsActive', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['InstitutionID'], ['admin.Institutions.InstitutionID'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['OfficialID'], ['admin.Officials.OfficialID'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('AssignmentID'),
    schema='admin'
    )
    op.create_table('AIAnswers',
    sa.Column('AnswerID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('QueryID', sa.Integer(), nullable=False),
    sa.Column('AnswerText', sa.NVARCHAR(), nullable=False),
    sa.Column('ConfidenceScore', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('DisclaimerAdded', sa.Boolean(), nullable=True),
    sa.Column('AnswerDate', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['QueryID'], ['ai.AIQueries.QueryID'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('AnswerID'),
    schema='ai'
    )
    op.create_table('Budgets',
    sa.Column('BudgetID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Year', sa.Integer(), nullable=False),
    sa.Column('RegionID', sa.Integer(), nullable=True),
    sa.Column('InstitutionID', sa.Integer(), nullable=False),
    sa.Column('TotalAmount', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.Column('Currency', sa.NVARCHAR(length=10), nullable=True),
    sa.Column('DatePublished', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['InstitutionID'], ['admin.Institutions.InstitutionID'], ),
    sa.ForeignKeyConstraint(['RegionID'], ['core.Regions.RegionID'], ),
    sa.PrimaryKeyConstraint('BudgetID'),
    schema='budget'
    )
    op.create_table('PublicContracts',
    sa.Column('ContractID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ContractNumber', sa.NVARCHAR(length=50), nullable=False),
    sa.Column('SupplierID', sa.Integer(), nullable=False),
    sa.Column('InstitutionID', sa.Integer(), nullable=False),
    sa.Column('Amount', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.Column('StartDate', sa.Date(), nullable=True),
    sa.Column('EndDate', sa.Date(), nullable=True),
    sa.Column('Status', sa.NVARCHAR(length=50), nullable=True),
    sa.Column('Description', sa.NVARCHAR(length=500), nullable=True),
    sa.ForeignKeyConstraint(['InstitutionID'], ['admin.Institutions.InstitutionID'], ),
    sa.ForeignKeyConstraint(['SupplierID'], ['budget.Suppliers.SupplierID'], ),
    sa.PrimaryKeyConstraint('ContractID'),
    schema='budget'
    )
    op.create_table('QuizQuestions',
    sa.Column('QuestionID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('QuizID', sa.Integer(), nullable=False),
    sa.Column('QuestionText', sa.NVARCHAR(length=500), nullable=False),
    sa.Column('CorrectAnswer', sa.NVARCHAR(length=255), nullable=False),
    sa.Column('OptionA', sa.NVARCHAR(length=255), nullable=True),
    sa.Column('OptionB', sa.NVARCHAR(length=255), nullable=True),
    sa.Column('OptionC', sa.NVARCHAR(length=255), nullable=True),
    sa.Column('OptionD', sa.NVARCHAR(length=255), nullable=True),
    sa.ForeignKeyConstraint(['QuizID'], ['civic.Quizzes.QuizID'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('QuestionID'),
    schema='civic'
    )
    op.create_table('QuizResults',
    sa.Column('ResultID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('UserID', sa.Integer(), nullable=False),
    sa.Column('QuizID', sa.Integer(), nullable=False),
    sa.Column('Score', sa.Float(), nullable=False),
    sa.Column('CompletionDate', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['QuizID'], ['civic.Quizzes.QuizID'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['UserID'], ['auth.Users.UserID'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ResultID'),
    schema='civic'
    )
    op.create_table('ReviewFlags',
    sa.Column('FlagID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ReviewID', sa.Integer(), nullable=False),
    sa.Column('UserID', sa.Integer(), nullable=False),
    sa.Column('Reason', sa.NVARCHAR(length=255), nullable=False),
    sa.Column('DateFlagged', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['ReviewID'], ['civic.Reviews.ReviewID'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['UserID'], ['auth.Users.UserID']),
    sa.PrimaryKeyConstraint('FlagID'),
    schema='civic'
    )
    op.create_table('ReviewModeration',
    sa.Column('ModerationID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ReviewID', sa.Integer(), nullable=False),
    sa.Column('ModeratorID', sa.Integer(), nullable=False),
    sa.Column('Decision', sa.NVARCHAR(length=50), nullable=False),
    sa.Column('Notes', sa.NVARCHAR(), nullable=True),
    sa.Column('DecisionDate', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['ModeratorID'], ['auth.Users.UserID'], ),
    sa.ForeignKeyConstraint(['ReviewID'], ['civic.Reviews.ReviewID'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ModerationID'),
    schema='civic'
    )
    op.create_table('LawArticles',
    sa.Column('ArticleID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('LawID', sa.Integer(), nullable=False),
    sa.Column('ArticleNumber', sa.NVARCHAR(length=20), nullable=True),
    sa.Column('Content', sa.NVARCHAR(), nullable=False),
    sa.Column('Keywords', sa.NVARCHAR(length=255), nullable=True),
    sa.ForeignKeyConstraint(['LawID'], ['law.Laws.LawID'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ArticleID'),
    schema='law'
    )
    op.create_table('LawTags',
    sa.Column('TagID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('LawID', sa.Integer(), nullable=False),
    sa.Column('TagName', sa.NVARCHAR(length=100), nullable=False),
    sa.ForeignKeyConstraint(['LawID'], ['law.Laws.LawID'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('TagID'),
    schema='law'
    )
    op.create_table('AIAnswerSources',
    sa.Column('SourceID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('AnswerID', sa.Integer(), nullable=False),
    sa.Column('LawID', sa.Integer(), nullable=True),
    sa.Column('ArticleID', sa.Integer(), nullable=True),
    sa.Column('RelevanceScore', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['AnswerID'], ['ai.AIAnswers.AnswerID'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['ArticleID'], ['law.LawArticles.ArticleID'], ),
    sa.ForeignKeyConstraint(['LawID'], ['law.Laws.LawID'], ),
    sa.PrimaryKeyConstraint('SourceID'),
    schema='ai'
    )
    op.create_table('AIUserFeedback',
    sa.Column('FeedbackID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('AnswerID', sa.Integer(), nullable=False),
    sa.Column('UserID', sa.Integer(), nullable=True),
    sa.Column('FeedbackType', sa.NVARCHAR(length=50), nullable=False),
    sa.Column('Comment', sa.NVARCHAR(), nullable=True),
    sa.Column('FeedbackDate', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['AnswerID'], ['ai.AIAnswers.AnswerID'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['UserID'], ['auth.Users.UserID'], ),
    sa.PrimaryKeyConstraint('FeedbackID'),
    schema='ai'
    )
    op.create_table('BudgetItems',
    sa.Column('ItemID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('BudgetID', sa.Integer(), nullable=False),
    sa.Column('Category', sa.NVARCHAR(length=150), nullable=False),
    sa.Column('Description', sa.NVARCHAR(length=500), nullable=True),
    sa.Column('Amount', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.Column('RegionID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['BudgetID'], ['budget.Budgets.BudgetID'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['RegionID'], ['core.Regions.RegionID'], ),
    sa.PrimaryKeyConstraint('ItemID'),
    schema='budget'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('BudgetItems', schema='budget')
    op.drop_table('AIUserFeedback', schema='ai')
    op.drop_table('AIAnswerSources', schema='ai')
    op.drop_table('LawTags', schema='law')
    op.drop_table('LawArticles', schema='law')
    op.drop_table('ReviewModeration', schema='civic')
    op.drop_table('ReviewFlags', schema='civic')
    op.drop_table('QuizResults', schema='civic')
    op.drop_table('QuizQuestions', schema='civic')
    op.drop_table('PublicContracts', schema='budget')
    op.drop_table('Budgets', schema='budget')
    op.drop_table('AIAnswers', schema='ai')
    op.drop_table('OfficialAssignments', schema='admin')
    op.drop_table('Notifications', schema='system')
    op.drop_table('AuditLogs', schema='system')
    op.drop_table('Laws', schema='law')
    op.drop_table('Reviews', schema='civic')
    op.drop_table('Quizzes', schema='civic')
    op.drop_table('AwarenessArticles', schema='civic')
    op.drop_table('UserRoles', schema='auth')
    op.drop_table('AIQueries', schema='ai')
    op.drop_table('Institutions', schema='admin')
    op.drop_table('SystemParameters', schema='system')
    op.drop_table('ErrorLogs', schema='system')
    op.drop_table('ETLJobs', schema='system')
    op.drop_table('LawIssues', schema='law')
    op.drop_table('Regions', schema='core')
    op.drop_table('Provinces', schema='core')
    op.drop_table('Cities', schema='core')
    op.drop_table('AwarenessTopics', schema='civic')
    op.drop_table('Suppliers', schema='budget')
    op.drop_table('DataSources', schema='budget')
    op.drop_index(op.f('ix_auth_Users_Username'), table_name='Users', schema='auth')
    op.drop_index(op.f('ix_auth_Users_Email'), table_name='Users', schema='auth')
    op.drop_table('Users', schema='auth')
    op.drop_table('Roles', schema='auth')
    op.drop_table('Officials', schema='admin')
    # ### end Alembic commands ###


